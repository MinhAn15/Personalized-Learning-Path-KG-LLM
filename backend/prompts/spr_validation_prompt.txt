### Sparse Priming Representation (SPR) Validation Prompt

**Purpose**: Automatically verify and correct `nodes.csv` and `relationships.csv` generated from a single educational document so they conform to the three-layer extraction workflow, CSV schema, and Knowledge Graph standards. Produce a detailed validation report plus corrected CSV text.

---

## Inputs
- Original document (PDF, slide deck, article, etc.).
- Generated `nodes.csv` and `relationships.csv` aligning with the SPR generator prompt.

---

## Three-Layer Validation Workflow

### Layer 1 ? Concept Consistency Checks
- Confirm every node property (`Document_ID`, `Node_ID`, `Node_Label`, `Sanitized_Concept`, `Context`, `Definition`, `Example`, `Learning_Objective`, `Skill_Level`, `Time_Estimate`, `Difficulty`, `Priority`, `Prerequisites`, `Semantic_Tags`, `Focused_Semantic_Tags`, and dynamic `Key_Property_X` / `Value_X`) matches the document content and educational conventions.
- Recalculate inferred values when evidence contradicts the CSV (e.g., Bloom level, Time_Estimate tiers, Difficulty, Priority).
- Ensure `Semantic_Tags` contains exactly 20 alphabetized entries and `Focused_Semantic_Tags` contains 3?5 alphabetized entries including the core concept; adjust or flag when violated.

### Layer 2 ? Context & Relation Integrity
- Validate optional properties (Numerical_Data, Real_World_Application, Learning_Tips, Socratic_Inference, etc.) against explicit or strongly implied content. Remove unsupported pairs or supply corrected values.
- Review relationship rows to ensure allowed types {REQUIRES, IS_PREREQUISITE_OF, NEXT, REMEDIATES, HAS_ALTERNATIVE_PATH, SIMILAR_TO, IS_SUBCONCEPT_OF} and verify Weight/Dependency scores reflect the narrative importance described in the document.
- Cross-check that every `Prerequisites` entry corresponds to a valid node and aligns with at least one relationship where appropriate.

### Layer 3 ? Schema Validation & JSON Compliance
- Validate each row against the JSON Schemas below before final output. Rows failing validation must be corrected or removed with justification.

```json
{
  "$id": "https://example.org/spr/node.schema.json",
  "type": "object",
  "required": [
    "Document_ID", "Node_ID", "Node_Label", "Sanitized_Concept",
    "Context", "Definition", "Example", "Learning_Objective",
    "Skill_Level", "Time_Estimate", "Difficulty", "Priority",
    "Prerequisites", "Semantic_Tags", "Focused_Semantic_Tags"
  ],
  "properties": {
    "Document_ID": {"type": "string", "minLength": 1},
    "Node_ID": {"type": "string", "pattern": "^([a-zA-Z]+:[a-z0-9_]+)$"},
    "Node_Label": {"type": "string", "enum": ["Concept", "Lesson", "Quiz", "Experiment", "Topic", "Resource"]},
    "Sanitized_Concept": {"type": "string", "pattern": "^[a-z0-9_]+$"},
    "Context": {"type": "string"},
    "Definition": {"type": "string"},
    "Example": {"type": "string"},
    "Learning_Objective": {"type": "string"},
    "Skill_Level": {"type": "string", "enum": ["Remember", "Understand", "Apply", "Analyze", "Evaluate", "Create", "Not Available"]},
    "Time_Estimate": {"type": "string", "pattern": "^([0-9]+|Not Available)$"},
    "Difficulty": {"type": "string", "enum": ["STANDARD", "ADVANCED", "Not Available"]},
    "Priority": {"type": "string", "pattern": "^[1-5]|Not Available$"},
    "Prerequisites": {"type": "string"},
    "Semantic_Tags": {"type": "string"},
    "Focused_Semantic_Tags": {"type": "string"}
  },
  "additionalProperties": true
}
```

```json
{
  "$id": "https://example.org/spr/relationship.schema.json",
  "type": "object",
  "required": [
    "Document_ID", "Source_Node_ID", "Relationship_Type",
    "Target_Node_ID", "Weight", "Dependency"
  ],
  "properties": {
    "Document_ID": {"type": "string", "minLength": 1},
    "Source_Node_ID": {"type": "string"},
    "Relationship_Type": {"type": "string", "enum": ["REQUIRES", "IS_PREREQUISITE_OF", "NEXT", "REMEDIATES", "HAS_ALTERNATIVE_PATH", "SIMILAR_TO", "IS_SUBCONCEPT_OF"]},
    "Target_Node_ID": {"type": "string"},
    "Weight": {"type": "string", "pattern": "^[1-5]|Not Available$"},
    "Dependency": {"type": "string", "pattern": "^[1-5]|Not Available$"}
  },
  "additionalProperties": false
}
```

- After corrections, confirm the CSVs serialize into JSON objects that satisfy these schemas when parsed row-by-row.

---

## Output Requirements
1. **Validation Report**
   - For every node: `[Node_ID] - [Property] - [Correct/Incorrect] - [Reasoning] - [Suggested Correction]`.
   - For every relationship: `[Source_Node_ID -> Target_Node_ID] - [Property] - [Correct/Incorrect] - [Reasoning] - [Suggested Correction]`.
   - Summaries: counts of correct vs updated properties, percentage compliance for nodes and relationships.
2. **Corrected CSVs**
   - `validated_node.csv`: fully corrected node table with two extra columns:
     - `Validation_Status` (?Correct? if untouched, ?Updated? if any field changed).
     - `Corrections_Applied` (comma-separated notes or blank if none).
   - `validated_relationship.csv`: corrected relationship table with the same additional columns.
   - Ensure CSV headers remain identical to the generator schema, with new columns appended at the end.

---

## Mini Example
Given an input row:
```
"Doc_001","concept:mean","Concept","mean","descriptive_statistics","Average of data.","Example missing","Understand","5","STANDARD","4","Not Available","mean;average","mean"
```
Validation should report:
```
[Node_ID: concept:mean] - [Example] - [Incorrect] - [Reasoning: Example required but missing in Section 2] - [Suggested Correction: "Mean salary of 40k, 50k, 60k is 50k."]
[Node_ID: concept:mean] - [Semantic_Tags] - [Incorrect] - [Reasoning: Only 2 tags; schema requires 20]
```
Corrected CSV row:
```
"Doc_001","concept:mean","Concept","mean","descriptive_statistics","Average of data.","Mean salary of 40k, 50k, 60k is 50k.","Compute averages for sample datasets.","Apply","15","STANDARD","4","concept:data_collection","arithmetic_mean;average;central_tendency;data_analysis;data_literacy;data_science;descriptive_statistics;expected_value;finance;forecasting;mathematics;mean;probability;quantitative_methods;quantitative_reasoning;statistics;statistical_analysis;summary_statistics;trend_analysis;value_aggregation","arithmetic_mean;central_tendency;descriptive_statistics","Validation_Status","Updated","Corrections_Applied","Example updated; Skill_Level adjusted to Apply; Semantic_Tags expanded"
```

Apply this layered validation process to every row, ensuring the final CSVs and report reflect the corrected, schema-compliant Knowledge Graph data.
